[defaults]
hostname     = 'localhost'  ; default
port         = 8883
username     = 'mqttwarn'
password     = 'MQTTPASSWORD'
clientid     = 'mqttwarn'
lwt          = 'clients/mqttwarn'
skipretained = False
cleansession = False

# MQTTv31 = 3   (default)
# MQTTv311 = 4
protocol     = 3

ca_certs = '/volume/config/tls/ca.crt'
tls_insecure = True
tls_version = 'tlsv1'

; logging
logformat = '%(asctime)-15s %(levelname)-5s [%(module)s] %(message)s'
logfile   = '/volume/log/mqttwarn.log'

; one of: CRITICAL, DEBUG, ERROR, INFO, WARN
loglevel     = DEBUG

; path to file containing self-defined functions for formatmap and datamap
; omit the '.py' extension
functions = 'samplefuncs'

; name the service providers you will be using.
launch   = file, log

[config:file]
append_newline = True
targets = {
    'owntracks'  : ['/volume/log/mqtt-owntracks.log'],
    'mqttwarn'   : ['/volume/log/mqttwarn.err'],
    }

[config:log]
targets = {
    'info'   : [ 'info' ],
    'warn'   : [ 'warn' ],
    'crit'   : [ 'crit' ],
    'error'  : [ 'error' ]
  }

; special config for 'failover' events
[failover]
targets = log:error, file:mqttwarn

[hello/1]
targets = log:info
format = u'{name}: {number} => {_dthhmm}'

[owntracks-location]
topic = owntracks/+/+
targets = log:info, file:owntracks
datamap = OwnTracksTopic2Data()
format  = OwnTracksConvert()

[owntracks-location2]
topic = _owntracks/#
targets = log:info, file:owntracks
datamap = OwnTracksTopic2Data()
format  = OwnTracksConvert()

[owntracks-battery]
topic = owntracks/+/+
targets = log:info, file:owntracks
datamap = OwnTracksTopic2Data()
filter  = OwnTracksBattFilter()
format  = {username}'s phone battery is getting low ({batt}%)

